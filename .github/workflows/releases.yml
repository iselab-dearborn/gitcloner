# This is a basic workflow that is manually triggered

name: New Version

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
    workflow_dispatch:
        # Inputs the workflow accepts.
        branches: [ master ]
        inputs:
            version:
                description: 'New Version'
                default: '1.0.0'
                required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build:
        name: Create Release
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2
            
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            
            -   name: Updating Version
                run: mvn versions:set -DnewVersion=${{ github.event.inputs.version }}
            
            -   name: Build with Maven
                run: mvn -B package --file pom.xml
                
            -   name: Commit files # commit the output folder
                run: |
                    git config --local user.email "thiagodnf@github.com"
                    git config --local user.name "Thiago Ferreira"
                    git add pom.xml
                    git commit -m "Prepare for next version"
            
            -   name: Push changes # push the output folder to your repo
                uses: ad-m/github-push-action@master
                with:
                    branch: master
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    force: true
            
            -   name: Create Release
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
                with:
                    tag_name: v${{ github.event.inputs.version }}
                    release_name: v${{ github.event.inputs.version }}
                    body: ${{ github.event.inputs.description }}
                    draft: false
                    prerelease: false
                    
            -   name: Save on Github Packages
                run: mvn -B deploy
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
